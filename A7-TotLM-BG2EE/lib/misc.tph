// Various installation routines

ADD_JOURNAL TITLE (@40174) @27047 @27071 @27077 @27114 @27206 @27208 @27209 @27214 @90000


ACTION_IF (NOT FILE_EXISTS_IN_GAME ~7eyes.2da~) BEGIN
  OUTER_FOR (strref = 21648; strref < 21655; ++strref) BEGIN
    LAF GET_UPDATED_STRREF INT_VAR old_strref = strref RET new_strref END
    OUTER_TEXT_SPRINT $strrefs(~%strref%~) ~%new_strref%~
  END
  COPY ~%MOD_FOLDER%/2da/7eyes.2da~ ~override~ EVAL
    PRETTY_PRINT_2DA
END

ACTION_IF (NOT FILE_EXISTS_IN_GAME ~cwelemw.2da~) BEGIN
  COPY ~%MOD_FOLDER%/2da/cwelemw.2da~ ~override~
END

ACTION_BASH_FOR ~%MOD_FOLDER%/bam~ ~^.+\.BAM$~ BEGIN
  OUTER_TEXT_SPRINT res ~%BASH_FOR_RES%~
  ACTION_TO_UPPER ~res~
  ACTION_IF (VARIABLE_IS_SET $map_spellicon(~%res%~)) BEGIN
    OUTER_TEXT_SPRINT new_res $map_spellicon(~%res%~)
    ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%new_res%.BAM~) BEGIN
      COPY ~%BASH_FOR_FILESPEC%~ ~override/%new_res%.BAM~
    END
  END ELSE BEGIN
    ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%BASH_FOR_FILE%~) BEGIN
      COPY ~%BASH_FOR_FILESPEC%~ ~override~
    END
  END
END

COPY ~%MOD_FOLDER%/bmp~ ~override~

ACTION_BASH_FOR ~%MOD_FOLDER%/ini~ ~^.+\.ini$~ BEGIN
  COPY ~%BASH_FOR_FILESPEC%~ ~override~
END

// Adding new creature animations to ANIMATE.IDS
COPY ~%MOD_FOLDER%/ini/animate-iwd.ids~ ~%MOD_FOLDER%/ini/animate-iwd.ids~
  CLEAR_ARRAY ~ini_items~
  READ_2DA_ENTRIES_NOW ~ini_items~ 2
  FOR (row = 0; row < ini_items; ++row) BEGIN
    READ_2DA_ENTRY_FORMER ~ini_items~ row 0 id
    READ_2DA_ENTRY_FORMER ~ini_items~ row 1 res
    INNER_ACTION BEGIN
      APPEND ~animate.ids~ ~%id% %res%~ UNLESS ~\b%res%\b~
    END
  END
BUT_ONLY


// Installing tilesets
ACTION_BASH_FOR ~%MOD_FOLDER%/tis~ ~^.+\.tis$~ BEGIN
  COPY ~%BASH_FOR_FILESPEC%~ ~override~
    LPF UPDATE_PVRZ_INDICES RET original_base_index new_base_index END

  // Installing associated PVRZ files
  ACTION_IF (new_base_index >= 0) BEGIN
    LAF TIS_RES_TO_PVRZ STR_VAR tis_res = EVAL ~%BASH_FOR_FILESPEC%~ RET prefix END
    ACTION_BASH_FOR ~%MOD_FOLDER%/tis~ ~^%prefix%.*\.pvrz$~ BEGIN
      LAF INSTALL_PVRZ
        INT_VAR original_base_index new_base_index
        STR_VAR source_file = EVAL ~%BASH_FOR_FILESPEC%~
        RET success
      END
      ACTION_IF (NOT success) BEGIN
        FAIL ~Could not install %BASH_FOR_FILESPEC%.~
      END
    END
  END ELSE BEGIN
    FAIL ~Could not install file %BASH_FOR_FILESPEC%.~
  END
END


ACTION_FOR_EACH type IN ~vvc~ ~wed~ ~wav~ ~wav/english~ ~wav/%LANGUAGE%~ BEGIN
  ACTION_IF (DIRECTORY_EXISTS ~%MOD_FOLDER%/%type%~) BEGIN
    ACTION_BASH_FOR ~%MOD_FOLDER%/%type%~ ~^.+\.%type%$~ BEGIN
      ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%BASH_FOR_FILE%~) BEGIN
        COPY ~%BASH_FOR_FILESPEC%~ ~override~
      END
    END
  END
END


// adding Hobart
OUTER_SET hobart_checks = 0
OUTER_TEXT_SPRINT hobart_trigger ~~
ACTION_IF (GAME_INCLUDES ~soa~) BEGIN
  // Umar Hills
  COPY_EXISTING ~ar1105.are~ ~override~
    LPF fj_are_structure
    INT_VAR
      fj_loc_x       = 755
      fj_loc_y       = 546
      fj_orientation = 14
      fj_animation   = IDS_OF_SYMBOL(~animate~ ~THIEF_MALE_HALFLING~)
    STR_VAR
      fj_structure_type = ~actor~
      fj_name           = ~ID#Hobart~
      fj_cre_resref     = ~HOBART~
      fj_bcs_override   = ~LWHOBART~
      fj_bcs_class      = ~EFHEALI1~
      fj_bcs_race       = ~EFATKMEL~
      fj_bcs_specific   = ~EFTWNCHK~
    END
  OUTER_SET hobart_checks += 1
  OUTER_TEXT_SPRINT hobart_trigger ~%hobart_trigger% AreaCheck("AR1105")~
END

ACTION_IF (GAME_INCLUDES ~tob~) BEGIN
  // Saradush
  COPY_EXISTING ~ar5003.are~ ~override~
    LPF fj_are_structure
    INT_VAR
      fj_loc_x       = 910
      fj_loc_y       = 585
      fj_orientation = 13
      fj_animation   = IDS_OF_SYMBOL(~animate~ ~THIEF_MALE_HALFLING~)
    STR_VAR
      fj_structure_type = ~actor~
      fj_name           = ~ID#Hobart~
      fj_cre_resref     = ~HOBART~
      fj_bcs_override   = ~LWHOBART~
      fj_bcs_class      = ~EFHEALI1~
      fj_bcs_race       = ~EFATKMEL~
      fj_bcs_specific   = ~EFTWNCHK~
    END
  OUTER_SET hobart_checks += 1
  OUTER_TEXT_SPRINT hobart_trigger ~%hobart_trigger% AreaCheck("AR5003")~

  // Amkethran
  COPY_EXISTING ~ar5501.are~ ~override~
    LPF fj_are_structure
    INT_VAR
      fj_loc_x       = 316
      fj_loc_y       = 455
      fj_orientation = 6
      fj_animation   = IDS_OF_SYMBOL(~animate~ ~THIEF_MALE_HALFLING~)
    STR_VAR
      fj_structure_type = ~actor~
      fj_name           = ~ID#Hobart~
      fj_cre_resref     = ~HOBART~
      fj_bcs_override   = ~LWHOBART~
      fj_bcs_class      = ~EFHEALI1~
      fj_bcs_race       = ~EFATKMEL~
      fj_bcs_specific   = ~EFTWNCHK~
    END
  OUTER_SET hobart_checks += 1
  OUTER_TEXT_SPRINT hobart_trigger ~%hobart_trigger% AreaCheck("AR5501")~
END

ACTION_IF (GAME_INCLUDES ~sod~) BEGIN
  // Coalition Camp
  COPY_EXISTING ~bd3000.are~ ~override~
    LPF fj_are_structure
    INT_VAR
      fj_loc_x       = 2310
      fj_loc_y       = 1518
      fj_orientation = 2
      fj_animation   = IDS_OF_SYMBOL(~animate~ ~THIEF_MALE_HALFLING~)
    STR_VAR
      fj_structure_type = ~actor~
      fj_name           = ~ID#Hobart~
      fj_cre_resref     = ~HOBART~
      fj_bcs_override   = ~LWHOBART~
      fj_bcs_class      = ~EFHEALI1~
      fj_bcs_race       = ~EFATKMEL~
      fj_bcs_specific   = ~EFTWNCHK~
    END
  OUTER_SET hobart_checks += 1
  OUTER_TEXT_SPRINT hobart_trigger ~%hobart_trigger% AreaCheck("BD3000")~

<<<<<<<< .../inlined/totlm-bg2ee/lwhobart_camp.baf
// Hobart leaves the camp with the crowd
IF
  GlobalGT("bd_plot","GLOBAL",394)
  AreaCheck("BD3000")  // Allied Siege Camp
THEN
  RESPONSE #100
    DestroySelf()
END

// Hobart leaves the castle after Charname is accused of murder
IF
  GlobalGT("bd_plot","GLOBAL",599)
  AreaCheck("BD4300")  // Dragonspear Castle Basement
THEN
  RESPONSE #100
    DestroySelf()
END
>>>>>>>>
  EXTEND_TOP ~lwhobart.bcs~ ~.../inlined/totlm-bg2ee/lwhobart_camp.baf~

  // Hobart is available in Castle Dragonspear after the party returns from Avernus
<<<<<<<< .../inlined/totlm-bg2ee/bd4300.baf
IF
  GlobalGT("bd_plot","GLOBAL",584)
  Global("ID#Master_Quest","GLOBAL",0)
  Global("ID#HobartMoved","BD4300",0)
THEN
  RESPONSE #100
    SetInterrupt(FALSE)
    SetGlobal("ID#HobartMoved","bd4300",1)
    CreateCreature("hobart",[1008.1032],14)
    SmallWait(2)
    ActionOverride("hobart",ChangeAIScript("LWHOBART",OVERRIDE))
    ActionOverride("hobart",ChangeAIScript("EFHEALI1",CLASS))
    ActionOverride("hobart",ChangeAIScript("EFATKMEL",RACE))
    ActionOverride("hobart",ChangeAIScript("EFTWNCHK",SPECIFICS))
    SetInterrupt(TRUE)
END
>>>>>>>>
  EXTEND_BOTTOM ~bd4300.bcs~ ~.../inlined/totlm-bg2ee/bd4300.baf~
  OUTER_SET hobart_checks += 1
  OUTER_TEXT_SPRINT hobart_trigger ~%hobart_trigger% AreaCheck("BD4300")~
END

ACTION_IF (FILE_EXISTS_IN_GAME ~id9101.are~) BEGIN
  // Lonelywood (IWD-in-EET)
  OUTER_SET hobart_checks += 1
  OUTER_TEXT_SPRINT hobart_trigger ~%hobart_trigger% AreaCheck("ID9101")~
END

// Hobart isn't needed anymore after the quest is completed
ACTION_IF (hobart_checks > 1) BEGIN
  OUTER_TEXT_SPRINT hobart_trigger ~OR(%hobart_checks%) %hobart_trigger%~
END
<<<<<<<< .../inlined/totlm-bg2ee/lwhobart_checks.baf
IF
  !Global("ID#Master_Quest","GLOBAL",0)
  %hobart_trigger%
THEN
  RESPONSE #100
    DestroySelf()
END
>>>>>>>>
EXTEND_TOP ~lwhobart.bcs~ ~.../inlined/totlm-bg2ee/lwhobart_checks.baf~ EVAL


// Making sure you can't leave Castle Maluradek with Pocket Plane ability
ACTION_IF (GAME_INCLUDES ~tob~) BEGIN
<<<<<<<< .../inlined/totlm-bg2ee/itpplane_top.baf
IF
  WalkedToTrigger([ANYONE])
  Global("LeavingPocketPlane","AR4500",1)
  GlobalGT("GavePocketPlane","GLOBAL",0)
  GlobalGT("ID#Master_Quest","GLOBAL",0)
  GlobalLT("ID#Master_Quest","GLOBAL",7)
  !GlobalTimerNotExpired("Triggered","MYAREA")
THEN
  RESPONSE #100
    ClearAllActions()
    SetGlobalTimer("Triggered","MYAREA",TWO_MINUTES)
    StartCutSceneMode()
    StartCutScene("cut221a")
END
>>>>>>>>
  EXTEND_TOP ~itpplane.bcs~ ~.../inlined/totlm-bg2ee/itpplane_top.baf~
END


// adding areas to master list
ACTION_CLEAR_ARRAY ~lines~
COPY ~%MOD_FOLDER%/2da/mastarea-iwd.2da~ ~%MOD_FOLDER%/2da/mastarea-iwd.2da~
  LPF READ_TEXT_LINES RET lines RET_ARRAY lines END
BUT_ONLY

ACTION_IF (GAME_IS ~bgee~ && GAME_INCLUDES ~sod~) BEGIN
  OUTER_TEXT_SPRINT mastarea ~sodmarea~
END ELSE BEGIN
  OUTER_TEXT_SPRINT mastarea ~mastarea~
END

ACTION_PHP_EACH lines AS _ => line BEGIN
  OUTER_PATCH_SAVE area ~%line%~ BEGIN REPLACE_TEXTUALLY ~^\([^ %TAB%]+\).+~ ~\1~ END
  APPEND ~%mastarea%.2da~ ~%line%~ UNLESS ~%area%~
END

COPY_EXISTING ~%mastarea%.2da~ ~override~
  PRETTY_PRINT_2DA
BUT_ONLY


// appending fog information
OUTER_SET fog_idx_max = 0 // stores highest available fog entry index
ACTION_FOR_EACH table IN ~fogarea~ ~fogpt~ BEGIN
  COPY_EXISTING ~%table%.2da~ ~override~
    COUNT_2DA_ROWS 1 numRows
    FOR (row = 3; row < numRows; ++row) BEGIN
      READ_2DA_ENTRY row 0 1 cur_idx
      PATCH_IF (IS_AN_INT ~cur_idx~ && cur_idx > fog_idx_max) BEGIN
        SET fog_idx_max = cur_idx
      END
    END
  BUT_ONLY
END
OUTER_SET fog_id9800_idx = fog_idx_max + 1

COPY_EXISTING ~fogarea.2da~ ~override~
  APPEND_FILE_EVALUATE TEXT ~%MOD_FOLDER%/2da/fogarea-append.2da~
  PRETTY_PRINT_2DA
BUT_ONLY

COPY_EXISTING ~fogpt.2da~ ~override~
  APPEND_FILE_EVALUATE TEXT ~%MOD_FOLDER%/2da/fogpt-append.2da~
  PRETTY_PRINT_2DA
BUT_ONLY

COPY_EXISTING ~id9800.bcs~ ~override~
  DECOMPILE_AND_PATCH BEGIN
    REPLACE_TEXTUALLY ~SetGlobal("FOG_TYPE","GLOBAL",-?[1-9][0-9]*)~ ~SetGlobal("FOG_TYPE","GLOBAL",%fog_id9800_idx%)~
  END
BUT_ONLY


// appending tooltips
ACTION_FOR_EACH strref IN ~1863~ ~2693~ ~2938~ BEGIN
  LAF GET_UPDATED_STRREF INT_VAR old_strref = strref RET new_strref END
  OUTER_TEXT_SPRINT $strrefs(~%strref%~) ~%new_strref%~
END

ACTION_CLEAR_ARRAY ~lines~
COPY ~%MOD_FOLDER%/2da/tooltip-iwd.2da~ ~%MOD_FOLDER%/2da/tooltip-iwd.2da~
  LPF READ_TEXT_LINES RET lines RET_ARRAY lines END
BUT_ONLY

ACTION_PHP_EACH lines AS _ => line BEGIN
  OUTER_PATCH_SAVE item ~%line%~ BEGIN REPLACE_TEXTUALLY ~^\([^ %TAB%]+\).+~ ~\1~ END
  OUTER_PATCH_SAVE line ~%line%~ BEGIN EVAL END
  APPEND ~tooltip.2da~ ~%line%~ UNLESS ~%item%~
END

COPY_EXISTING ~tooltip.2da~ ~override~
  PRETTY_PRINT_2DA
BUT_ONLY


// appending tracking info
OUTER_FOR (strref = 40240; strref < 40251; ++strref) BEGIN
  LAF GET_UPDATED_STRREF INT_VAR old_strref = strref RET new_strref END
  OUTER_TEXT_SPRINT $strrefs(~%strref%~) ~%new_strref%~
END

ACTION_CLEAR_ARRAY ~lines~
COPY ~%MOD_FOLDER%/2da/tracking-iwd.2da~ ~%MOD_FOLDER%/2da/tracking-iwd.2da~
  LPF READ_TEXT_LINES RET lines RET_ARRAY lines END
BUT_ONLY

ACTION_PHP_EACH lines AS _ => line BEGIN
  OUTER_PATCH_SAVE area ~%line%~ BEGIN REPLACE_TEXTUALLY ~^\([^ %TAB%]+\).+~ ~\1~ END
  OUTER_PATCH_SAVE line ~%line%~ BEGIN EVAL END
  APPEND ~tracking.2da~ ~%line%~ UNLESS ~%area%~
END

COPY_EXISTING ~tracking.2da~ ~override~
  PRETTY_PRINT_2DA
BUT_ONLY


// expanding areas list for debug console
ACTION_CLEAR_ARRAY ~lines~
COPY ~%MOD_FOLDER%/lua/bgee-append.lua~ ~%MOD_FOLDER%/lua/bgee-append.lua~
  LPF READ_TEXT_LINES RET lines RET_ARRAY lines END
BUT_ONLY

COPY_EXISTING ~bgee.lua~ ~override~
  PATCH_IF (GAME_IS ~bgee~ && GAME_INCLUDES ~sod~) BEGIN
    TEXT_SPRINT cheatAreas ~cheatAreasExpansion~
  END ELSE BEGIN
    TEXT_SPRINT cheatAreas ~cheatAreas~
  END
  SET pos_start = INDEX_BUFFER(~^[ %TAB%]*%cheatAreas%[ %TAB%]*=[ %TAB%]*{[ %TAB%]*[%WNL%]~)
  PATCH_IF (pos_start >= 0) BEGIN
    SET pos_end = INDEX_BUFFER(~^[ %TAB%]*}[ %TAB%]*[%WNL%]~ pos_start)
    PATCH_IF (pos_end > pos_start) BEGIN
      SET pos = pos_end
      PATCH_PHP_EACH lines AS _ => line BEGIN
        TEXT_SPRINT line ~%TAB%%line%%WNL%~
        SET len = STRING_LENGTH ~%line%~
        INSERT_BYTES pos len
        WRITE_ASCIIE pos ~%line%~ (len)
        SET pos += len
      END
    END
  END
BUT_ONLY

// Installing and updating creatures

DEFINE_PATCH_FUNCTION FIX_CRE
BEGIN
  // updating strrefs
  PATCH_FOR_EACH ofs IN ~0x08~ ~0x0c~ BEGIN
    READ_LONG ofs old_strref
    LPF GET_UPDATED_STRREF INT_VAR old_strref RET new_strref END
    WRITE_LONG ofs new_strref
  END
  // sound slot strrefs
  FOR (i = 0; i < 100; ++i) BEGIN
    SET ofs = 0xa4 + i*4
    READ_LONG ofs old_strref
    PATCH_IF (old_strref > 0) BEGIN
      LPF GET_UPDATED_STRREF INT_VAR old_strref RET new_strref END
      WRITE_LONG ofs new_strref
    END
  END

  // updating known spells
  READ_LONG 0x2a0 ofs_known
  READ_LONG 0x2a4 num_known
  FOR (idx = 0; idx < num_known; ++idx) BEGIN
    SET ofs = ofs_known + (idx * 0x0c)
    // SPL resrefs
    READ_ASCII ofs resref (8) NULL
    TO_UPPER ~resref~
    PATCH_IF (NOT ~%resref%~ STR_EQ ~~ && VARIABLE_IS_SET $map_spell(~%resref%~)) BEGIN
      TEXT_SPRINT new_resref $map_spell(~%resref%~)
      WRITE_ASCIIE ofs ~%new_resref%~ (8)
    END
  END

  // updating memorized spells
  READ_LONG 0x2b0 ofs_spells
  READ_LONG 0x2b4 num_spells
  FOR (idx = 0; idx < num_spells; ++idx) BEGIN
    SET ofs = ofs_spells + (idx * 0x0c)
    READ_ASCII ofs resref (8) NULL
    TO_UPPER ~resref~
    PATCH_IF (NOT ~%resref%~ STR_EQ ~~ && VARIABLE_IS_SET $map_spell(~%resref%~)) BEGIN
      TEXT_SPRINT new_resref $map_spell(~%resref%~)
      WRITE_ASCIIE ofs ~%new_resref%~ (8)
    END
  END
END


// These creatures should always be installed
ACTION_DEFINE_ASSOCIATIVE_ARRAY creature_override BEGIN
  ~batcat~    => 1  // Bat
  ~ckspgrd~   => 1  // Spectral Guard
  ~ckspgrdh~  => 1  // Spectral Guard
  ~crypthng~  => 1  // Crypt Thing
  ~erris~     => 1  // Shade of Sir Erris
  ~geddian~   => 1  // Shade of Sir Geddian
  ~ghost~     => 1  // Ghost
  ~giles~     => 1  // Shade of Sir Giles
  ~hobart2~   => 1  // Hobart Stubbletoes
  ~jklsum~    => 1  // Summoner
  ~mercthfd~  => 1  // Dabath
  ~rakshinv~  => 1  // Rakshasa
  ~rndcryp~   => 1  // Crypt Thing
  ~shmblr~    => 1  // Shambler
  ~tradran~   => 1  // Spectral Hero
  ~trcriek~   => 1  // Spectral Hero
  ~trharld~   => 1  // Spectral Hero
  ~trhobrt~   => 1  // Spectral Hero
  ~trshelh~   => 1  // Spectral Hero
  ~trsph1~    => 1  // Spectral Hero
  ~trsph2~    => 1  // Spectral Hero
  ~trsph3~    => 1  // Spectral Hero
  ~trsph4~    => 1  // Spectral Hero
  ~trsph5~    => 1  // Spectral Hero
  ~trsph6~    => 1  // Spectral Hero
  ~trsph7~    => 1  // Spectral Hero
  ~trsph8~    => 1  // Spectral Hero
  ~trsph9~    => 1  // Spectral Hero
  ~zierkki~   => 1  // Shade of Sir Zierkki
END

ACTION_BASH_FOR ~%MOD_FOLDER%/cre~ ~^.+\.cre$~ BEGIN
  OUTER_TEXT_SPRINT resref ~%BASH_FOR_RES%~
  ACTION_TO_LOWER ~resref~
  OUTER_SET can_install = (VARIABLE_IS_SET $creature_override(~%resref%~) && $creature_override(~%resref%~) != 0) ||
                          (NOT FILE_EXISTS_IN_GAME ~%BASH_FOR_FILE%~)

  ACTION_IF (can_install) BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
      LPF FIX_CRE END
  END
END

// Installing game-specific resources
ACTION_IF (GAME_IS ~bg2ee eet~) BEGIN
  OUTER_TEXT_SPRINT folder ~bg2~
END ELSE BEGIN
  OUTER_TEXT_SPRINT folder ~bg1~
END
ACTION_BASH_FOR ~%MOD_FOLDER%/cre/%folder%~ ~^.+\.cre$~ BEGIN
  ACTION_IF (NOT FILE_EXISTS_IN_GAME ~%BASH_FOR_FILE%~) BEGIN
    COPY ~%BASH_FOR_FILESPEC%~ ~override~
      LPF FIX_CRE END
  END
END
